<?php //%255BApp%255CEntity%255CProfile%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
    ],
    null,
    [
        'stdClass' => [
            'collectionOperations' => [
                [
                    'get' => [
                        'path' => '/admin/profils',
                    ],
                    'POST' => [
                        'path' => '/admin/profils',
                    ],
                ],
            ],
            'itemOperations' => [
                [
                    'get_profil' => [
                        'method' => 'GET',
                        'path' => '/admin/profils/{id}',
                    ],
                    'update_profile' => [
                        'method' => 'put',
                        'path' => '/admin/profils/{id}',
                    ],
                    'delete_profil' => [
                        'method' => 'delete',
                        'path' => '/admin/profils/{id}',
                    ],
                ],
            ],
            'attributes' => [
                [
                    'normalization_context' => [
                        'groups' => [
                            'profil',
                        ],
                    ],
                ],
            ],
            'filterClass' => [
                1 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
            ],
            'properties' => [
                1 => [
                    'isdeleted' => 'exact',
                ],
            ],
            'repositoryClass' => [
                2 => 'App\\Repository\\ProfileRepository',
            ],
            'message' => [
                3 => 'Le libelle doit Ãªtre unique',
            ],
            'fields' => [
                3 => [
                    'libelle',
                ],
            ],
            'groups' => [
                3 => [
                    'Default',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
    ],
    []
); }];
